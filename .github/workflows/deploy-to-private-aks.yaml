name: Deploy to private AKS

on:
  push:
    branches:
      - main
  workflow_dispatch: # ðŸ‘ˆ Enable manual trigger from GitHub UI

concurrency:
  group: deployment
  cancel-in-progress: true

permissions:
  contents: write # Required for pushing tags
  security-events: write  # <-- needed for CodeQL to upload results

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest tag and bump patch version
        id: version
        run: |
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [[ -z "$latest_tag" ]]; then
            new_tag="0.0.1"
          else
            IFS='.' read -r major minor patch <<< "$latest_tag"
            new_patch=$((patch + 1))
            new_tag="${major}.${minor}.${new_patch}"
          fi
          echo "New tag: $new_tag"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Push new tag to GitHub
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ steps.version.outputs.tag }}
          git push origin ${{ steps.version.outputs.tag }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Run npm audit fix
        run: npm audit fix

      - name: Run npm audit (high or critical)
        run: npm audit --audit-level=high

      - name: Run TypeScript Linter
        run: npm run lint

      - name: Build the project
        run: npm run build

      - name: GitHub CodeQL Analysis Init
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: GitHub CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry (ACR)
        uses: docker/login-action@v2
        with:
          registry: nextjsbasicapp.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push image to ACR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            nextjsbasicapp.azurecr.io/nextjsbasicapp-image:latest
            nextjsbasicapp.azurecr.io/nextjsbasicapp-image:${{ steps.version.outputs.tag }}

      - name: Inject version into Chart.yaml and values.yaml
        run: |
          version=${{ steps.version.outputs.tag }}
          sed -i "s/@version@/${version}/g" helm/Chart.yaml
          sed -i "s/@version@/${version}/g" helm/values.yaml

      - name: Package Helm chart
        run: helm package helm --destination packaged

      - name: Package Helm chart
        run: helm package helm --destination packaged

      - name: Push Helm chart to ACR via OCI
        run: |
          helm registry login nextjsbasicapp.azurecr.io \
            --username ${{ secrets.ACR_USERNAME }} \
            --password ${{ secrets.ACR_PASSWORD }}

          helm push packaged/helm-${{ steps.version.outputs.tag }}.tgz oci://nextjsbasicapp.azurecr.io/helm

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group my-aks-rg --name myakscluster --overwrite-existing

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.3

      - name: Lint Helm chart
        run: helm lint helm

      - name: Deploy chart to cluster
        run: |
          helm upgrade --install nextjsbasic ./helm \
            --namespace default \
            --atomic --force

      - name: Wait for pod to be ready
        run: |
          kubectl wait --for=condition=Ready pod -l app=nextjsbasic-app --timeout=90s

      - name: Verify pod status
        run: kubectl get pods -l app=nextjsbasic-app
